{"paragraphs":[{"text":"%md\n----\nWhen you open this sample notebook for the first time, you will see a **Settings** section at the start. You must click **Save** in the section so that the interpreters can be bound to this notebook.","dateUpdated":"2016-09-27T00:04:09+0000","config":{"colWidth":8,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<p>When you open this sample notebook for the first time, you will see a <strong>Settings</strong> section at the start. You must click <strong>Save</strong> in the section so that the interpreters can be bound to this notebook.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<p>When you open this sample notebook for the first time, you will see a <strong>Settings</strong> section at the start. You must click <strong>Save</strong> in the section so that the interpreters can be bound to this notebook.</p>\n"},"apps":[],"jobName":"paragraph_1474672081472_1207112100","id":"20160923-230801_2011482447","dateCreated":"2016-09-23T11:08:01+0000","dateStarted":"2016-09-27T00:03:50+0000","dateFinished":"2016-09-27T00:03:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6446"},{"text":"%md\n# Basics of Spark on HDInsight\n\n[Apache Spark](https://spark.apache.org/) is an open-source parallel processing framework that supports in-memory processing to boost the performance of big-data analytic applications. When you provision a Spark cluster in HDInsight, you provision Azure compute resources with Spark installed and configured. The data to be processed is stored in Azure storage.\n\n! For WASB, [Spark on HDInsight](https://mysstorage.blob.core.windows.net/notebookimages/overview/SparkArchitecture.png \"Spark on HDInsight\")\n\nNow that you have created a Spark cluster, let us understand some basics of working with Spark on HDInsight. For detailed discussion on working with Spark, see [Spark Programming Guide](https://spark.apache.org/docs/2.1.0/programming-guide.html).","dateUpdated":"2016-09-23T10:26:42+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Basics of Spark on HDInsight</h1>\n<p><a href=\"https://spark.apache.org/\">Apache Spark</a> is an open-source parallel processing framework that supports in-memory processing to boost the performance of big-data analytic applications. When you provision a Spark cluster in HDInsight, you provision Azure compute resources with Spark installed and configured. The data to be processed is stored in Azure storage.For WASB: </p>\n<p><img src=\"https://mysstorage.blob.core.windows.net/notebookimages/overview/SparkArchitecture.png\" alt=\"Spark on HDInsight\" title=\"Spark on HDInsight\" /></p>\n<p>Now that you have created a Spark cluster, let us understand some basics of working with Spark on HDInsight. For detailed discussion on working with Spark, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html\">Spark Programming Guide</a>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Basics of Spark on HDInsight</h1>\n<p><a href=\"https://spark.apache.org/\">Apache Spark</a> is an open-source parallel processing framework that supports in-memory processing to boost the performance of big-data analytic applications. When you provision a Spark cluster in HDInsight, you provision Azure compute resources with Spark installed and configured. The data to be processed is stored in Azure storage.For WASB: </p>\n<p><img src=\"https://mysstorage.blob.core.windows.net/notebookimages/overview/SparkArchitecture.png\" alt=\"Spark on HDInsight\" title=\"Spark on HDInsight\" /></p>\n<p>Now that you have created a Spark cluster, let us understand some basics of working with Spark on HDInsight. For detailed discussion on working with Spark, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html\">Spark Programming Guide</a>.</p>\n"},"apps":[],"jobName":"paragraph_1474496238826_-374831725","id":"20160920-230738_23908324","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-23T10:26:39+0000","dateFinished":"2016-09-23T10:26:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6447"},{"text":"%md\n----------\n## Notebook setup\n\nWhen using Livy interpreters on HDInsight, there is no need to create a SparkContext or a SparkSession; those are all created for you automatically when you run the first code cell. The contexts are created with the following variable names:\n- SparkSession (spark)\n\nTo run the cells below, place the cursor in the cell and then press **SHIFT + ENTER**.","dateUpdated":"2016-09-22T06:11:35+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<h2>Notebook setup</h2>\n<p>When using Livy interpreters on HDInsight, there is no need to create a SparkContext or a SparkSession; those are all created for you automatically when you run the first code cell. The contexts are created with the following variable names:</p>\n<ul>\n<li>SparkSession (spark)</li>\n</ul>\n<p>To run the cells below, place the cursor in the cell and then press <strong>SHIFT + ENTER</strong>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<h2>Notebook setup</h2>\n<p>When using Livy interpreters on HDInsight, there is no need to create a SparkContext or a SparkSession; those are all created for you automatically when you run the first code cell. The contexts are created with the following variable names:</p>\n<ul>\n<li>SparkSession (spark)</li>\n</ul>\n<p>To run the cells below, place the cursor in the cell and then press <strong>SHIFT + ENTER</strong>.</p>\n"},"apps":[],"jobName":"paragraph_1474496238828_-377140218","id":"20160920-230843_526997630","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:11:35+0000","dateFinished":"2016-09-22T06:11:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6448"},{"text":"%md\n----------\n\n## What is an RDD?\n\nBig Data applications rely on iterative, distributed computing for faster processing of large data sets. To distribute data processing over multiple jobs, the data is typically reused or shared across jobs. To share data between  existing distributed computing systems you need to store data in some intermediate stable distributed store such as HDFS. This makes the overall computations of jobs slower.\n\n**Resilient Distributed Datasets** or RDDs address this by enabling fault-tolerant, distributed, in-memory computations.\n\n----------\n\n## How do I make an RDD?\n\nRDDs can be created from stable storage or by transforming other RDDs. Run the cells below to create RDDs from the sample data files available in the storage container associated with your Spark cluster. One such sample data file is available on the cluster at `/example/data/fruits.txt`. \n\nTo run the snippets in the cells, place the cursor in the cell below and press **SHIFT + ENTER**. You can also click the **Run Cell** button from the menu above.","dateUpdated":"2016-09-22T06:11:39+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<h2>What is an RDD?</h2>\n<p>Big Data applications rely on iterative, distributed computing for faster processing of large data sets. To distribute data processing over multiple jobs, the data is typically reused or shared across jobs. To share data between  existing distributed computing systems you need to store data in some intermediate stable distributed store such as HDFS. This makes the overall computations of jobs slower.</p>\n<p><strong>Resilient Distributed Datasets</strong> or RDDs address this by enabling fault-tolerant, distributed, in-memory computations.</p>\n<hr />\n<h2>How do I make an RDD?</h2>\n<p>RDDs can be created from stable storage or by transforming other RDDs. Run the cells below to create RDDs from the sample data files available in the storage container associated with your Spark cluster. One such sample data file is available on the cluster at <code>/example/data/fruits.txt</code>.</p>\n<p>To run the snippets in the cells, place the cursor in the cell below and press <strong>SHIFT + ENTER</strong>. You can also click the <strong>Run Cell</strong> button from the menu above.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<h2>What is an RDD?</h2>\n<p>Big Data applications rely on iterative, distributed computing for faster processing of large data sets. To distribute data processing over multiple jobs, the data is typically reused or shared across jobs. To share data between  existing distributed computing systems you need to store data in some intermediate stable distributed store such as HDFS. This makes the overall computations of jobs slower.</p>\n<p><strong>Resilient Distributed Datasets</strong> or RDDs address this by enabling fault-tolerant, distributed, in-memory computations.</p>\n<hr />\n<h2>How do I make an RDD?</h2>\n<p>RDDs can be created from stable storage or by transforming other RDDs. Run the cells below to create RDDs from the sample data files available in the storage container associated with your Spark cluster. One such sample data file is available on the cluster at <code>/example/data/fruits.txt</code>.</p>\n<p>To run the snippets in the cells, place the cursor in the cell below and press <strong>SHIFT + ENTER</strong>. You can also click the <strong>Run Cell</strong> button from the menu above.</p>\n"},"apps":[],"jobName":"paragraph_1474496238828_-377140218","id":"20160920-230803_1814437096","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:11:39+0000","dateFinished":"2016-09-22T06:11:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6449"},{"text":"%livy.spark\nval fruits = spark.sparkContext.textFile(\"/example/data/fruits.txt\")\nval yellowThings = spark.sparkContext.textFile(\"/example/data/yellowthings.txt\")","dateUpdated":"2016-09-22T04:11:23+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238828_-377140218","id":"20160921-164531_995658195","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T04:11:23+0000","dateFinished":"2016-09-22T04:11:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6450"},{"text":"%md\nFor more examples on how to create RDDs see the following notebooks available with your Spark cluster:\n\n* Read and write data from Azure Storage\n* Read and write data from Hive tables","dateUpdated":"2016-09-22T06:11:44+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>For more examples on how to create RDDs see the following notebooks available with your Spark cluster:</p>\n<ul>\n<li>Read and write data from Azure Storage</li>\n<li>Read and write data from Hive tables</li>\n</ul>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>For more examples on how to create RDDs see the following notebooks available with your Spark cluster:</p>\n<ul>\n<li>Read and write data from Azure Storage</li>\n<li>Read and write data from Hive tables</li>\n</ul>\n"},"apps":[],"jobName":"paragraph_1474496238828_-377140218","id":"20160921-165926_2005739467","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:11:44+0000","dateFinished":"2016-09-22T06:11:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6451"},{"text":"%md\n----------\n\n## What are RDD operations?\nRDDs support two types of operations: transformations and actions.\n\n* **Transformations** create a new dataset from an existing one. Transformations are lazy, meaning that no transformation is executed until you execute an action.\n* **Actions** return a value to the driver program after running a computation on the dataset.\n\n### RDD transformations\nFollowing are examples of some of the common transformations available. For a detailed list, see [RDD Transformations](https://spark.apache.org/docs/2.1.0/programming-guide.html#transformations)\n\nRun some transformations below to understand this better. Place the cursor in the cell and press **SHIFT + ENTER**.","dateUpdated":"2016-09-23T10:27:13+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<h2>What are RDD operations?</h2>\n<p>RDDs support two types of operations: transformations and actions.</p>\n<ul>\n<li><strong>Transformations</strong> create a new dataset from an existing one. Transformations are lazy, meaning that no transformation is executed until you execute an action.</li>\n<li><strong>Actions</strong> return a value to the driver program after running a computation on the dataset.</li>\n</ul>\n<h3>RDD transformations</h3>\n<p>Following are examples of some of the common transformations available. For a detailed list, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html#transformations\">RDD Transformations</a></p>\n<p>Run some transformations below to understand this better. Place the cursor in the cell and press <strong>SHIFT + ENTER</strong>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<h2>What are RDD operations?</h2>\n<p>RDDs support two types of operations: transformations and actions.</p>\n<ul>\n<li><strong>Transformations</strong> create a new dataset from an existing one. Transformations are lazy, meaning that no transformation is executed until you execute an action.</li>\n<li><strong>Actions</strong> return a value to the driver program after running a computation on the dataset.</li>\n</ul>\n<h3>RDD transformations</h3>\n<p>Following are examples of some of the common transformations available. For a detailed list, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html#transformations\">RDD Transformations</a></p>\n<p>Run some transformations below to understand this better. Place the cursor in the cell and press <strong>SHIFT + ENTER</strong>.</p>\n"},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-170021_23787011","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-23T10:27:10+0000","dateFinished":"2016-09-23T10:27:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6452"},{"text":"%livy.spark\n/* map */\nval fruitsReversed = fruits.map((fruit) => fruit.reverse)","dateUpdated":"2016-09-22T11:04:25+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-175811_466509357","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6453"},{"text":"%livy.spark\n/* filter */\nval shortFruits = fruits.filter((fruit) =>  fruit.length <= 5)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-175926_690722248","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6454"},{"text":"%livy.spark\n/* flatMap */\nval characters = fruits.flatMap((fruit) => fruit.toList)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-180102_2008784548","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6455"},{"text":"%livy.spark\n/* union */\nval fruitsAndYellowThings = fruits.union(yellowThings)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-180145_646504246","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6456"},{"text":"%livy.spark\n/* intersection */\nval yellowFruits = fruits.intersection(yellowThings)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-180255_872026198","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6457"},{"text":"%livy.spark\n/* distinct */\nval distinctFruitsAndYellowThings = fruitsAndYellowThings.distinct()","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-181107_2066522816","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6458"},{"text":"%livy.spark\n/* groupByKey */\nval yellowThingsByFirstLetter = yellowThings.map((thing) => (thing(0), thing)).groupByKey()","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-181150_1197352000","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6459"},{"text":"%livy.spark\n/* reduceByKey */\nval numFruitsByLength = fruits.map((fruit) => (fruit.length, 1)).reduceByKey((x, y) => x + y)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238829_-377524967","id":"20160921-181227_1904306131","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6460"},{"text":"%md\n### RDD actions\nFollowing are examples of some of the common actions available. For a detailed list, see [RDD Actions](https://spark.apache.org/docs/2.1.0/programming-guide.html#actions).\n\nRun some transformations below to understand this better. Place the cursor in the cell and press **SHIFT + ENTER**.","dateUpdated":"2016-09-23T10:30:18+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>RDD actions</h3>\n<p>Following are examples of some of the common actions available. For a detailed list, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html#actions\">RDD Actions</a>.</p>\n<p>Run some transformations below to understand this better. Place the cursor in the cell and press <strong>SHIFT + ENTER</strong>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<h3>RDD actions</h3>\n<p>Following are examples of some of the common actions available. For a detailed list, see <a href=\"https://spark.apache.org/docs/2.1.0/programming-guide.html#actions\">RDD Actions</a>.</p>\n<p>Run some transformations below to understand this better. Place the cursor in the cell and press <strong>SHIFT + ENTER</strong>.</p>\n"},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181254_1387397397","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-23T10:30:14+0000","dateFinished":"2016-09-23T10:30:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6461"},{"text":"%livy.spark\n/* collect */\nval fruitsArray = fruits.collect()\nval yellowThingsArray = yellowThings.collect()","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181336_2115315469","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6462"},{"text":"%livy.spark\n/* count */\nval numFruits = fruits.count()","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181419_685617670","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6463"},{"text":"%livy.spark\n/* take */\nval first3Fruits = fruits.take(3)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181510_1333275439","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6464"},{"text":"%livy.spark\n/* reduce */\nval letterSet = fruits.map((fruit) => fruit.toSet).reduce((x, y) => x ++ y)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181539_615281792","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6465"},{"text":"%md\n------\n> **IMPORTANT**: Another important RDD action is saving the output to a file. See the **Read and write data from Azure Storage** notebook for more information.","dateUpdated":"2016-09-22T06:50:16+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<blockquote><p><strong>IMPORTANT</strong>: Another important RDD action is saving the output to a file. See the <strong>Read and write data from Azure Storage</strong> notebook for more information.</p>\n</blockquote>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<blockquote><p><strong>IMPORTANT</strong>: Another important RDD action is saving the output to a file. See the <strong>Read and write data from Azure Storage</strong> notebook for more information.</p>\n</blockquote>\n"},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181612_106541116","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:12:00+0000","dateFinished":"2016-09-22T06:12:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6466"},{"text":"%md\r\n----------\r\n\r\n## What is a dataframe?\r\n\r\nThe `spark.sql` library provides an alternative API for manipulating structured datasets, known as \"dataframes\". (Dataframes are not a Spark-specific concept but `pyspark` provides its own dedicated dataframe library.) These are different from RDDs, but you can convert an RDD into a dataframe or vice-versa, if required.\r\n\r\nSee [Spark SQL and DataFrame Guide](https://spark.apache.org/docs/2.1.0/sql-programming-guide.html#datasets-and-dataframes) for more information.\r\n\r\n### How do I make a dataframe?\r\n\r\nYou can load a dataframe directly from an input data source. See the following notebooks included with your Spark cluster for more information.\r\n\r\n* Read and write data from Azure Storage\r\n* Read and write data from Hive tables\r\n\r\nYou can also create a dataframe from an RDD by specifying the schema of the dataframe as shown in the snippet below.","dateUpdated":"2016-09-23T10:30:49+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<h2>What is a dataframe?</h2>\n<p>The <code>spark.sql</code> library provides an alternative API for manipulating structured datasets, known as &ldquo;dataframes&rdquo;. (Dataframes are not a Spark-specific concept but <code>pyspark</code> provides its own dedicated dataframe library.) These are different from RDDs, but you can convert an RDD into a dataframe or vice-versa, if required.</p>\n<p>See <a href=\"https://spark.apache.org/docs/2.1.0/sql-programming-guide.html#datasets-and-dataframes\">Spark SQL and DataFrame Guide</a> for more information.</p>\n<h3>How do I make a dataframe?</h3>\n<p>You can load a dataframe directly from an input data source. See the following notebooks included with your Spark cluster for more information.</p>\n<ul>\n<li>Read and write data from Azure Storage</li>\n<li>Read and write data from Hive tables</li>\n</ul>\n<p>You can also create a dataframe from an RDD by specifying the schema of the dataframe as shown in the snippet below.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<h2>What is a dataframe?</h2>\n<p>The <code>spark.sql</code> library provides an alternative API for manipulating structured datasets, known as &ldquo;dataframes&rdquo;. (Dataframes are not a Spark-specific concept but <code>pyspark</code> provides its own dedicated dataframe library.) These are different from RDDs, but you can convert an RDD into a dataframe or vice-versa, if required.</p>\n<p>See <a href=\"https://spark.apache.org/docs/2.1.0/sql-programming-guide.html#datasets-and-dataframes\">Spark SQL and DataFrame Guide</a> for more information.</p>\n<h3>How do I make a dataframe?</h3>\n<p>You can load a dataframe directly from an input data source. See the following notebooks included with your Spark cluster for more information.</p>\n<ul>\n<li>Read and write data from Azure Storage</li>\n<li>Read and write data from Hive tables</li>\n</ul>\n<p>You can also create a dataframe from an RDD by specifying the schema of the dataframe as shown in the snippet below.</p>\n"},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-181649_425952889","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-23T10:30:49+0000","dateFinished":"2016-09-23T10:30:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6467"},{"text":"%livy.spark\nimport org.apache.spark.sql.Row; \nimport org.apache.spark.sql.types.{StructType,StructField,StringType,IntegerType};\nval buildings = (spark.sparkContext.textFile(\"/HdiSamples/HdiSamples/SensorSampleData/building/building.csv\")\n                   .map((line) => line.split(\",\"))\n                   .filter((r) => r(0) != \"BuildingID\")\n                   .map((r) => Row(r(0).toInt, r(1), r(2).toInt, r(3), r(4))))\nval schema = StructType(List(StructField(\"BuildingID\", IntegerType, true),\n                             StructField(\"BuildingMgr\", StringType, true),\n                             StructField(\"BuildingAge\", IntegerType, true),\n                             StructField(\"HVACProduct\", StringType, true),\n                             StructField(\"Country\", StringType, true)))\nval df = spark.createDataFrame(buildings, schema)","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-182000_1034083846","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6468"},{"text":"%md\n-------\n\n## Spark SQL and dataframes\n\nYou can run SQL queries over dataframes once you register them as temporary tables within the SQL context. Run the snippet below to see an example.","dateUpdated":"2016-09-22T06:12:06+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<hr />\n<h2>Spark SQL and dataframes</h2>\n<p>You can run SQL queries over dataframes once you register them as temporary tables within the SQL context. Run the snippet below to see an example.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<hr />\n<h2>Spark SQL and dataframes</h2>\n<p>You can run SQL queries over dataframes once you register them as temporary tables within the SQL context. Run the snippet below to see an example.</p>\n"},"apps":[],"jobName":"paragraph_1474496238830_-376370721","id":"20160921-201156_595018656","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:12:06+0000","dateFinished":"2016-09-22T06:12:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6469"},{"text":"%livy.spark\ndf.registerTempTable(\"HVAC\")\n","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238831_-376755469","id":"20160921-201009_1281009634","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6470"},{"text":"%md\nThe HDInsight Spark kernel supports easy inline SQL queries. Simply type `%livy.sql` followed by a SQL query to run a SQL query on a dataframe.","dateUpdated":"2016-09-22T06:12:09+0000","config":{"tableHide":false,"colWidth":8,"editorMode":"ace/mode/markdown","editorHide":true,"enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>The HDInsight Spark kernel supports easy inline SQL queries. Simply type <code>%livy.sql</code> followed by a SQL query to run a SQL query on a dataframe.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>The HDInsight Spark kernel supports easy inline SQL queries. Simply type <code>%livy.sql</code> followed by a SQL query to run a SQL query on a dataframe.</p>\n"},"apps":[],"jobName":"paragraph_1474496238831_-376755469","id":"20160921-201033_1761897060","dateCreated":"2016-09-21T10:17:18+0000","dateStarted":"2016-09-22T06:12:09+0000","dateFinished":"2016-09-22T06:12:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6471"},{"text":"%livy.sql\nSELECT * FROM HVAC WHERE BuildingAge >= 10","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"BuildingID","index":0,"aggr":"sum"}],"values":[{"name":"BuildingMgr","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"BuildingID","index":0,"aggr":"sum"},"yAxis":{"name":"BuildingMgr","index":1,"aggr":"sum"}}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238831_-376755469","id":"20160921-201419_750857686","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6472"},{"text":"%livy.sql\nSELECT BuildingID, Country FROM HVAC LIMIT 3","dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"editorMode":"ace/mode/text","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238831_-376755469","id":"20160921-201455_1457359229","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6473"},{"dateUpdated":"2016-09-21T10:17:18+0000","config":{"colWidth":8,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1474496238831_-376755469","id":"20160921-204549_1215811462","dateCreated":"2016-09-21T10:17:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6474"}],"name":"/Scala/01 - Learn the Basics of Spark on HDInsight","id":"2BXHD54G6","angularObjects":{"2BW4JER6M:shared_process":[],"2BY6DUW66:shared_process":[],"2BVQBY2TK:shared_process":[],"2BWAGF2BV:shared_process":[],"2BW5W61RX:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}